<?php declare(strict_types=1);

namespace Vapi\Types;

use Vapi\Core\Json\JsonProperty;
use Vapi\Core\Json\JsonSerializableType;
use Vapi\Core\Types\ArrayType;

final class AssistantMessage extends JsonSerializableType
{
    /**
     * @var 'assistant' $role This is the role of the message author
     */
    #[JsonProperty('role')]
    public string $role;

    /**
     * @var ?string $content This is the content of the assistant message
     */
    #[JsonProperty('content')]
    public ?string $content;

    /**
     * @var ?string $refusal This is the refusal message generated by the model
     */
    #[JsonProperty('refusal')]
    public ?string $refusal;

    /**
     * @var ?array<ToolCall> $toolCalls This is the tool calls generated by the model
     */
    #[JsonProperty('tool_calls'), ArrayType([ToolCall::class])]
    public ?array $toolCalls;

    /**
     * @var ?string $name This is an optional name for the participant
     */
    #[JsonProperty('name')]
    public ?string $name;

    /**
     * @var ?array<string, mixed> $metadata This is an optional metadata for the message
     */
    #[JsonProperty('metadata'), ArrayType(['string' => 'mixed'])]
    public ?array $metadata;

    /**
     * @param array{
     *   role: 'assistant',
     *   content?: ?string,
     *   refusal?: ?string,
     *   toolCalls?: ?array<ToolCall>,
     *   name?: ?string,
     *   metadata?: ?array<string, mixed>,
     * } $values
     */
    public function __construct(
        array $values,
    ) {
        $this->role = $values['role'];
        $this->content = $values['content'] ?? null;
        $this->refusal = $values['refusal'] ?? null;
        $this->toolCalls = $values['toolCalls'] ?? null;
        $this->name = $values['name'] ?? null;
        $this->metadata = $values['metadata'] ?? null;
    }

    /**
     * @return string
     */
    public function __toString(): string
    {
        return $this->toJson();
    }
}
