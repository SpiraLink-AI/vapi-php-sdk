<?php declare(strict_types=1);

namespace Vapi\Types;

enum ServerMessageEndOfCallReportEndedReason: string
{
    case CallStartErrorNeitherAssistantNorServerSet = 'call-start-error-neither-assistant-nor-server-set';
    case AssistantRequestFailed = 'assistant-request-failed';
    case AssistantRequestReturnedError = 'assistant-request-returned-error';
    case AssistantRequestReturnedUnspeakableError = 'assistant-request-returned-unspeakable-error';
    case AssistantRequestReturnedInvalidAssistant = 'assistant-request-returned-invalid-assistant';
    case AssistantRequestReturnedNoAssistant = 'assistant-request-returned-no-assistant';
    case AssistantRequestReturnedForwardingPhoneNumber = 'assistant-request-returned-forwarding-phone-number';
    case ScheduledCallDeleted = 'scheduled-call-deleted';
    case CallStartErrorVapifaultGetOrg = 'call.start.error-vapifault-get-org';
    case CallStartErrorVapifaultGetSubscription = 'call.start.error-vapifault-get-subscription';
    case CallStartErrorGetAssistant = 'call.start.error-get-assistant';
    case CallStartErrorGetPhoneNumber = 'call.start.error-get-phone-number';
    case CallStartErrorGetCustomer = 'call.start.error-get-customer';
    case CallStartErrorGetResourcesValidation = 'call.start.error-get-resources-validation';
    case CallStartErrorVapiNumberInternational = 'call.start.error-vapi-number-international';
    case CallStartErrorVapiNumberOutboundDailyLimit = 'call.start.error-vapi-number-outbound-daily-limit';
    case CallStartErrorGetTransport = 'call.start.error-get-transport';
    case CallStartErrorSubscriptionWalletDoesNotExist = 'call.start.error-subscription-wallet-does-not-exist';
    case CallStartErrorFraudCheckFailed = 'call.start.error-fraud-check-failed';
    case CallStartErrorSubscriptionFrozen = 'call.start.error-subscription-frozen';
    case CallStartErrorSubscriptionInsufficientCredits = 'call.start.error-subscription-insufficient-credits';
    case CallStartErrorSubscriptionUpgradeFailed = 'call.start.error-subscription-upgrade-failed';
    case CallStartErrorSubscriptionConcurrencyLimitReached = 'call.start.error-subscription-concurrency-limit-reached';
    case CallStartErrorEnterpriseFeatureNotAvailableRecordingConsent = 'call.start.error-enterprise-feature-not-available-recording-consent';
    case AssistantNotValid = 'assistant-not-valid';
    case DatabaseError = 'database-error';
    case AssistantNotFound = 'assistant-not-found';
    case PipelineErrorOpenaiVoiceFailed = 'pipeline-error-openai-voice-failed';
    case PipelineErrorCartesiaVoiceFailed = 'pipeline-error-cartesia-voice-failed';
    case PipelineErrorDeepgramVoiceFailed = 'pipeline-error-deepgram-voice-failed';
    case PipelineErrorElevenLabsVoiceFailed = 'pipeline-error-eleven-labs-voice-failed';
    case PipelineErrorPlayhtVoiceFailed = 'pipeline-error-playht-voice-failed';
    case PipelineErrorLmntVoiceFailed = 'pipeline-error-lmnt-voice-failed';
    case PipelineErrorAzureVoiceFailed = 'pipeline-error-azure-voice-failed';
    case PipelineErrorRimeAiVoiceFailed = 'pipeline-error-rime-ai-voice-failed';
    case PipelineErrorSmallestAiVoiceFailed = 'pipeline-error-smallest-ai-voice-failed';
    case PipelineErrorNeuphonicVoiceFailed = 'pipeline-error-neuphonic-voice-failed';
    case PipelineErrorHumeVoiceFailed = 'pipeline-error-hume-voice-failed';
    case PipelineErrorSesameVoiceFailed = 'pipeline-error-sesame-voice-failed';
    case PipelineErrorInworldVoiceFailed = 'pipeline-error-inworld-voice-failed';
    case PipelineErrorMinimaxVoiceFailed = 'pipeline-error-minimax-voice-failed';
    case PipelineErrorTavusVideoFailed = 'pipeline-error-tavus-video-failed';
    case CallInProgressErrorVapifaultOpenaiVoiceFailed = 'call.in-progress.error-vapifault-openai-voice-failed';
    case CallInProgressErrorVapifaultCartesiaVoiceFailed = 'call.in-progress.error-vapifault-cartesia-voice-failed';
    case CallInProgressErrorVapifaultDeepgramVoiceFailed = 'call.in-progress.error-vapifault-deepgram-voice-failed';
    case CallInProgressErrorVapifaultElevenLabsVoiceFailed = 'call.in-progress.error-vapifault-eleven-labs-voice-failed';
    case CallInProgressErrorVapifaultPlayhtVoiceFailed = 'call.in-progress.error-vapifault-playht-voice-failed';
    case CallInProgressErrorVapifaultLmntVoiceFailed = 'call.in-progress.error-vapifault-lmnt-voice-failed';
    case CallInProgressErrorVapifaultAzureVoiceFailed = 'call.in-progress.error-vapifault-azure-voice-failed';
    case CallInProgressErrorVapifaultRimeAiVoiceFailed = 'call.in-progress.error-vapifault-rime-ai-voice-failed';
    case CallInProgressErrorVapifaultSmallestAiVoiceFailed = 'call.in-progress.error-vapifault-smallest-ai-voice-failed';
    case CallInProgressErrorVapifaultNeuphonicVoiceFailed = 'call.in-progress.error-vapifault-neuphonic-voice-failed';
    case CallInProgressErrorVapifaultHumeVoiceFailed = 'call.in-progress.error-vapifault-hume-voice-failed';
    case CallInProgressErrorVapifaultSesameVoiceFailed = 'call.in-progress.error-vapifault-sesame-voice-failed';
    case CallInProgressErrorVapifaultInworldVoiceFailed = 'call.in-progress.error-vapifault-inworld-voice-failed';
    case CallInProgressErrorVapifaultMinimaxVoiceFailed = 'call.in-progress.error-vapifault-minimax-voice-failed';
    case CallInProgressErrorVapifaultTavusVideoFailed = 'call.in-progress.error-vapifault-tavus-video-failed';
    case PipelineErrorVapiLlmFailed = 'pipeline-error-vapi-llm-failed';
    case PipelineErrorVapi400BadRequestValidationFailed = 'pipeline-error-vapi-400-bad-request-validation-failed';
    case PipelineErrorVapi401Unauthorized = 'pipeline-error-vapi-401-unauthorized';
    case PipelineErrorVapi403ModelAccessDenied = 'pipeline-error-vapi-403-model-access-denied';
    case PipelineErrorVapi429ExceededQuota = 'pipeline-error-vapi-429-exceeded-quota';
    case PipelineErrorVapi500ServerError = 'pipeline-error-vapi-500-server-error';
    case PipelineErrorVapi503ServerOverloadedError = 'pipeline-error-vapi-503-server-overloaded-error';
    case CallInProgressErrorProviderfaultVapiLlmFailed = 'call.in-progress.error-providerfault-vapi-llm-failed';
    case CallInProgressErrorVapifaultVapi400BadRequestValidationFailed = 'call.in-progress.error-vapifault-vapi-400-bad-request-validation-failed';
    case CallInProgressErrorVapifaultVapi401Unauthorized = 'call.in-progress.error-vapifault-vapi-401-unauthorized';
    case CallInProgressErrorVapifaultVapi403ModelAccessDenied = 'call.in-progress.error-vapifault-vapi-403-model-access-denied';
    case CallInProgressErrorVapifaultVapi429ExceededQuota = 'call.in-progress.error-vapifault-vapi-429-exceeded-quota';
    case CallInProgressErrorProviderfaultVapi500ServerError = 'call.in-progress.error-providerfault-vapi-500-server-error';
    case CallInProgressErrorProviderfaultVapi503ServerOverloadedError = 'call.in-progress.error-providerfault-vapi-503-server-overloaded-error';
    case PipelineErrorDeepgramTranscriberFailed = 'pipeline-error-deepgram-transcriber-failed';
    case PipelineErrorDeepgramTranscriberApiKeyMissing = 'pipeline-error-deepgram-transcriber-api-key-missing';
    case CallInProgressErrorVapifaultDeepgramTranscriberFailed = 'call.in-progress.error-vapifault-deepgram-transcriber-failed';
    case PipelineErrorGladiaTranscriberFailed = 'pipeline-error-gladia-transcriber-failed';
    case CallInProgressErrorVapifaultGladiaTranscriberFailed = 'call.in-progress.error-vapifault-gladia-transcriber-failed';
    case PipelineErrorSpeechmaticsTranscriberFailed = 'pipeline-error-speechmatics-transcriber-failed';
    case CallInProgressErrorVapifaultSpeechmaticsTranscriberFailed = 'call.in-progress.error-vapifault-speechmatics-transcriber-failed';
    case PipelineErrorAssemblyAiTranscriberFailed = 'pipeline-error-assembly-ai-transcriber-failed';
    case PipelineErrorAssemblyAiReturning400InsufficentFunds = 'pipeline-error-assembly-ai-returning-400-insufficent-funds';
    case PipelineErrorAssemblyAiReturning400PaidOnlyFeature = 'pipeline-error-assembly-ai-returning-400-paid-only-feature';
    case PipelineErrorAssemblyAiReturning401InvalidCredentials = 'pipeline-error-assembly-ai-returning-401-invalid-credentials';
    case PipelineErrorAssemblyAiReturning500InvalidSchema = 'pipeline-error-assembly-ai-returning-500-invalid-schema';
    case PipelineErrorAssemblyAiReturning500WordBoostParsingFailed = 'pipeline-error-assembly-ai-returning-500-word-boost-parsing-failed';
    case CallInProgressErrorVapifaultAssemblyAiTranscriberFailed = 'call.in-progress.error-vapifault-assembly-ai-transcriber-failed';
    case CallInProgressErrorVapifaultAssemblyAiReturning400InsufficentFunds = 'call.in-progress.error-vapifault-assembly-ai-returning-400-insufficent-funds';
    case CallInProgressErrorVapifaultAssemblyAiReturning400PaidOnlyFeature = 'call.in-progress.error-vapifault-assembly-ai-returning-400-paid-only-feature';
    case CallInProgressErrorVapifaultAssemblyAiReturning401InvalidCredentials = 'call.in-progress.error-vapifault-assembly-ai-returning-401-invalid-credentials';
    case CallInProgressErrorVapifaultAssemblyAiReturning500InvalidSchema = 'call.in-progress.error-vapifault-assembly-ai-returning-500-invalid-schema';
    case CallInProgressErrorVapifaultAssemblyAiReturning500WordBoostParsingFailed = 'call.in-progress.error-vapifault-assembly-ai-returning-500-word-boost-parsing-failed';
    case PipelineErrorTalkscriberTranscriberFailed = 'pipeline-error-talkscriber-transcriber-failed';
    case CallInProgressErrorVapifaultTalkscriberTranscriberFailed = 'call.in-progress.error-vapifault-talkscriber-transcriber-failed';
    case PipelineErrorAzureSpeechTranscriberFailed = 'pipeline-error-azure-speech-transcriber-failed';
    case CallInProgressErrorVapifaultAzureSpeechTranscriberFailed = 'call.in-progress.error-vapifault-azure-speech-transcriber-failed';
    case CallInProgressErrorPipelineNoAvailableLlmModel = 'call.in-progress.error-pipeline-no-available-llm-model';
    case WorkerShutdown = 'worker-shutdown';
    case VonageDisconnected = 'vonage-disconnected';
    case VonageFailedToConnectCall = 'vonage-failed-to-connect-call';
    case VonageCompleted = 'vonage-completed';
    case PhoneCallProviderBypassEnabledButNoCallReceived = 'phone-call-provider-bypass-enabled-but-no-call-received';
    case CallInProgressErrorProviderfaultTransportNeverConnected = 'call.in-progress.error-providerfault-transport-never-connected';
    case CallInProgressErrorVapifaultWorkerNotAvailable = 'call.in-progress.error-vapifault-worker-not-available';
    case CallInProgressErrorVapifaultTransportNeverConnected = 'call.in-progress.error-vapifault-transport-never-connected';
    case CallInProgressErrorVapifaultTransportConnectedButCallNotActive = 'call.in-progress.error-vapifault-transport-connected-but-call-not-active';
    case CallInProgressErrorVapifaultCallStartedButConnectionToTransportMissing = 'call.in-progress.error-vapifault-call-started-but-connection-to-transport-missing';
    case CallInProgressErrorVapifaultWorkerDied = 'call.in-progress.error-vapifault-worker-died';
    case CallInProgressTwilioCompletedCall = 'call.in-progress.twilio-completed-call';
    case CallInProgressSipCompletedCall = 'call.in-progress.sip-completed-call';
    case CallInProgressErrorProviderfaultOpenaiLlmFailed = 'call.in-progress.error-providerfault-openai-llm-failed';
    case CallInProgressErrorProviderfaultAzureOpenaiLlmFailed = 'call.in-progress.error-providerfault-azure-openai-llm-failed';
    case CallInProgressErrorProviderfaultGroqLlmFailed = 'call.in-progress.error-providerfault-groq-llm-failed';
    case CallInProgressErrorProviderfaultGoogleLlmFailed = 'call.in-progress.error-providerfault-google-llm-failed';
    case CallInProgressErrorProviderfaultXaiLlmFailed = 'call.in-progress.error-providerfault-xai-llm-failed';
    case CallInProgressErrorProviderfaultMistralLlmFailed = 'call.in-progress.error-providerfault-mistral-llm-failed';
    case CallInProgressErrorProviderfaultInflectionAiLlmFailed = 'call.in-progress.error-providerfault-inflection-ai-llm-failed';
    case CallInProgressErrorProviderfaultCerebrasLlmFailed = 'call.in-progress.error-providerfault-cerebras-llm-failed';
    case CallInProgressErrorProviderfaultDeepSeekLlmFailed = 'call.in-progress.error-providerfault-deep-seek-llm-failed';
    case CallInProgressErrorVapifaultChatPipelineFailedToStart = 'call.in-progress.error-vapifault-chat-pipeline-failed-to-start';
    case PipelineErrorOpenai400BadRequestValidationFailed = 'pipeline-error-openai-400-bad-request-validation-failed';
    case PipelineErrorOpenai401Unauthorized = 'pipeline-error-openai-401-unauthorized';
    case PipelineErrorOpenai401IncorrectApiKey = 'pipeline-error-openai-401-incorrect-api-key';
    case PipelineErrorOpenai401AccountNotInOrganization = 'pipeline-error-openai-401-account-not-in-organization';
    case PipelineErrorOpenai403ModelAccessDenied = 'pipeline-error-openai-403-model-access-denied';
    case PipelineErrorOpenai429ExceededQuota = 'pipeline-error-openai-429-exceeded-quota';
    case PipelineErrorOpenai429RateLimitReached = 'pipeline-error-openai-429-rate-limit-reached';
    case PipelineErrorOpenai500ServerError = 'pipeline-error-openai-500-server-error';
    case PipelineErrorOpenai503ServerOverloadedError = 'pipeline-error-openai-503-server-overloaded-error';
    case PipelineErrorOpenaiLlmFailed = 'pipeline-error-openai-llm-failed';
    case CallInProgressErrorVapifaultOpenai400BadRequestValidationFailed = 'call.in-progress.error-vapifault-openai-400-bad-request-validation-failed';
    case CallInProgressErrorVapifaultOpenai401Unauthorized = 'call.in-progress.error-vapifault-openai-401-unauthorized';
    case CallInProgressErrorVapifaultOpenai401IncorrectApiKey = 'call.in-progress.error-vapifault-openai-401-incorrect-api-key';
    case CallInProgressErrorVapifaultOpenai401AccountNotInOrganization = 'call.in-progress.error-vapifault-openai-401-account-not-in-organization';
    case CallInProgressErrorVapifaultOpenai403ModelAccessDenied = 'call.in-progress.error-vapifault-openai-403-model-access-denied';
    case CallInProgressErrorVapifaultOpenai429ExceededQuota = 'call.in-progress.error-vapifault-openai-429-exceeded-quota';
    case CallInProgressErrorVapifaultOpenai429RateLimitReached = 'call.in-progress.error-vapifault-openai-429-rate-limit-reached';
    case CallInProgressErrorProviderfaultOpenai500ServerError = 'call.in-progress.error-providerfault-openai-500-server-error';
    case CallInProgressErrorProviderfaultOpenai503ServerOverloadedError = 'call.in-progress.error-providerfault-openai-503-server-overloaded-error';
    case PipelineErrorAzureOpenai400BadRequestValidationFailed = 'pipeline-error-azure-openai-400-bad-request-validation-failed';
    case PipelineErrorAzureOpenai401Unauthorized = 'pipeline-error-azure-openai-401-unauthorized';
    case PipelineErrorAzureOpenai403ModelAccessDenied = 'pipeline-error-azure-openai-403-model-access-denied';
    case PipelineErrorAzureOpenai429ExceededQuota = 'pipeline-error-azure-openai-429-exceeded-quota';
    case PipelineErrorAzureOpenai500ServerError = 'pipeline-error-azure-openai-500-server-error';
    case PipelineErrorAzureOpenai503ServerOverloadedError = 'pipeline-error-azure-openai-503-server-overloaded-error';
    case PipelineErrorAzureOpenaiLlmFailed = 'pipeline-error-azure-openai-llm-failed';
    case CallInProgressErrorVapifaultAzureOpenai400BadRequestValidationFailed = 'call.in-progress.error-vapifault-azure-openai-400-bad-request-validation-failed';
    case CallInProgressErrorVapifaultAzureOpenai401Unauthorized = 'call.in-progress.error-vapifault-azure-openai-401-unauthorized';
    case CallInProgressErrorVapifaultAzureOpenai403ModelAccessDenied = 'call.in-progress.error-vapifault-azure-openai-403-model-access-denied';
    case CallInProgressErrorVapifaultAzureOpenai429ExceededQuota = 'call.in-progress.error-vapifault-azure-openai-429-exceeded-quota';
    case CallInProgressErrorProviderfaultAzureOpenai500ServerError = 'call.in-progress.error-providerfault-azure-openai-500-server-error';
    case CallInProgressErrorProviderfaultAzureOpenai503ServerOverloadedError = 'call.in-progress.error-providerfault-azure-openai-503-server-overloaded-error';
    case PipelineErrorGoogle400BadRequestValidationFailed = 'pipeline-error-google-400-bad-request-validation-failed';
    case PipelineErrorGoogle401Unauthorized = 'pipeline-error-google-401-unauthorized';
    case PipelineErrorGoogle403ModelAccessDenied = 'pipeline-error-google-403-model-access-denied';
    case PipelineErrorGoogle429ExceededQuota = 'pipeline-error-google-429-exceeded-quota';
    case PipelineErrorGoogle500ServerError = 'pipeline-error-google-500-server-error';
    case PipelineErrorGoogle503ServerOverloadedError = 'pipeline-error-google-503-server-overloaded-error';
    case PipelineErrorGoogleLlmFailed = 'pipeline-error-google-llm-failed';
    case CallInProgressErrorVapifaultGoogle400BadRequestValidationFailed = 'call.in-progress.error-vapifault-google-400-bad-request-validation-failed';
    case CallInProgressErrorVapifaultGoogle401Unauthorized = 'call.in-progress.error-vapifault-google-401-unauthorized';
    case CallInProgressErrorVapifaultGoogle403ModelAccessDenied = 'call.in-progress.error-vapifault-google-403-model-access-denied';
    case CallInProgressErrorVapifaultGoogle429ExceededQuota = 'call.in-progress.error-vapifault-google-429-exceeded-quota';
    case CallInProgressErrorProviderfaultGoogle500ServerError = 'call.in-progress.error-providerfault-google-500-server-error';
    case CallInProgressErrorProviderfaultGoogle503ServerOverloadedError = 'call.in-progress.error-providerfault-google-503-server-overloaded-error';
    case PipelineErrorXai400BadRequestValidationFailed = 'pipeline-error-xai-400-bad-request-validation-failed';
    case PipelineErrorXai401Unauthorized = 'pipeline-error-xai-401-unauthorized';
    case PipelineErrorXai403ModelAccessDenied = 'pipeline-error-xai-403-model-access-denied';
    case PipelineErrorXai429ExceededQuota = 'pipeline-error-xai-429-exceeded-quota';
    case PipelineErrorXai500ServerError = 'pipeline-error-xai-500-server-error';
    case PipelineErrorXai503ServerOverloadedError = 'pipeline-error-xai-503-server-overloaded-error';
    case PipelineErrorXaiLlmFailed = 'pipeline-error-xai-llm-failed';
    case CallInProgressErrorVapifaultXai400BadRequestValidationFailed = 'call.in-progress.error-vapifault-xai-400-bad-request-validation-failed';
    case CallInProgressErrorVapifaultXai401Unauthorized = 'call.in-progress.error-vapifault-xai-401-unauthorized';
    case CallInProgressErrorVapifaultXai403ModelAccessDenied = 'call.in-progress.error-vapifault-xai-403-model-access-denied';
    case CallInProgressErrorVapifaultXai429ExceededQuota = 'call.in-progress.error-vapifault-xai-429-exceeded-quota';
    case CallInProgressErrorProviderfaultXai500ServerError = 'call.in-progress.error-providerfault-xai-500-server-error';
    case CallInProgressErrorProviderfaultXai503ServerOverloadedError = 'call.in-progress.error-providerfault-xai-503-server-overloaded-error';
    case PipelineErrorMistral400BadRequestValidationFailed = 'pipeline-error-mistral-400-bad-request-validation-failed';
    case PipelineErrorMistral401Unauthorized = 'pipeline-error-mistral-401-unauthorized';
    case PipelineErrorMistral403ModelAccessDenied = 'pipeline-error-mistral-403-model-access-denied';
    case PipelineErrorMistral429ExceededQuota = 'pipeline-error-mistral-429-exceeded-quota';
    case PipelineErrorMistral500ServerError = 'pipeline-error-mistral-500-server-error';
    case PipelineErrorMistral503ServerOverloadedError = 'pipeline-error-mistral-503-server-overloaded-error';
    case PipelineErrorMistralLlmFailed = 'pipeline-error-mistral-llm-failed';
    case CallInProgressErrorVapifaultMistral400BadRequestValidationFailed = 'call.in-progress.error-vapifault-mistral-400-bad-request-validation-failed';
    case CallInProgressErrorVapifaultMistral401Unauthorized = 'call.in-progress.error-vapifault-mistral-401-unauthorized';
    case CallInProgressErrorVapifaultMistral403ModelAccessDenied = 'call.in-progress.error-vapifault-mistral-403-model-access-denied';
    case CallInProgressErrorVapifaultMistral429ExceededQuota = 'call.in-progress.error-vapifault-mistral-429-exceeded-quota';
    case CallInProgressErrorProviderfaultMistral500ServerError = 'call.in-progress.error-providerfault-mistral-500-server-error';
    case CallInProgressErrorProviderfaultMistral503ServerOverloadedError = 'call.in-progress.error-providerfault-mistral-503-server-overloaded-error';
    case PipelineErrorInflectionAi400BadRequestValidationFailed = 'pipeline-error-inflection-ai-400-bad-request-validation-failed';
    case PipelineErrorInflectionAi401Unauthorized = 'pipeline-error-inflection-ai-401-unauthorized';
    case PipelineErrorInflectionAi403ModelAccessDenied = 'pipeline-error-inflection-ai-403-model-access-denied';
    case PipelineErrorInflectionAi429ExceededQuota = 'pipeline-error-inflection-ai-429-exceeded-quota';
    case PipelineErrorInflectionAi500ServerError = 'pipeline-error-inflection-ai-500-server-error';
    case PipelineErrorInflectionAi503ServerOverloadedError = 'pipeline-error-inflection-ai-503-server-overloaded-error';
    case PipelineErrorInflectionAiLlmFailed = 'pipeline-error-inflection-ai-llm-failed';
    case CallInProgressErrorVapifaultInflectionAi400BadRequestValidationFailed = 'call.in-progress.error-vapifault-inflection-ai-400-bad-request-validation-failed';
    case CallInProgressErrorVapifaultInflectionAi401Unauthorized = 'call.in-progress.error-vapifault-inflection-ai-401-unauthorized';
    case CallInProgressErrorVapifaultInflectionAi403ModelAccessDenied = 'call.in-progress.error-vapifault-inflection-ai-403-model-access-denied';
    case CallInProgressErrorVapifaultInflectionAi429ExceededQuota = 'call.in-progress.error-vapifault-inflection-ai-429-exceeded-quota';
    case CallInProgressErrorProviderfaultInflectionAi500ServerError = 'call.in-progress.error-providerfault-inflection-ai-500-server-error';
    case CallInProgressErrorProviderfaultInflectionAi503ServerOverloadedError = 'call.in-progress.error-providerfault-inflection-ai-503-server-overloaded-error';
    case PipelineErrorDeepSeek400BadRequestValidationFailed = 'pipeline-error-deep-seek-400-bad-request-validation-failed';
    case PipelineErrorDeepSeek401Unauthorized = 'pipeline-error-deep-seek-401-unauthorized';
    case PipelineErrorDeepSeek403ModelAccessDenied = 'pipeline-error-deep-seek-403-model-access-denied';
    case PipelineErrorDeepSeek429ExceededQuota = 'pipeline-error-deep-seek-429-exceeded-quota';
    case PipelineErrorDeepSeek500ServerError = 'pipeline-error-deep-seek-500-server-error';
    case PipelineErrorDeepSeek503ServerOverloadedError = 'pipeline-error-deep-seek-503-server-overloaded-error';
    case PipelineErrorDeepSeekLlmFailed = 'pipeline-error-deep-seek-llm-failed';
    case CallInProgressErrorVapifaultDeepSeek400BadRequestValidationFailed = 'call.in-progress.error-vapifault-deep-seek-400-bad-request-validation-failed';
    case CallInProgressErrorVapifaultDeepSeek401Unauthorized = 'call.in-progress.error-vapifault-deep-seek-401-unauthorized';
    case CallInProgressErrorVapifaultDeepSeek403ModelAccessDenied = 'call.in-progress.error-vapifault-deep-seek-403-model-access-denied';
    case CallInProgressErrorVapifaultDeepSeek429ExceededQuota = 'call.in-progress.error-vapifault-deep-seek-429-exceeded-quota';
    case CallInProgressErrorProviderfaultDeepSeek500ServerError = 'call.in-progress.error-providerfault-deep-seek-500-server-error';
    case CallInProgressErrorProviderfaultDeepSeek503ServerOverloadedError = 'call.in-progress.error-providerfault-deep-seek-503-server-overloaded-error';
    case PipelineErrorGroq400BadRequestValidationFailed = 'pipeline-error-groq-400-bad-request-validation-failed';
    case PipelineErrorGroq401Unauthorized = 'pipeline-error-groq-401-unauthorized';
    case PipelineErrorGroq403ModelAccessDenied = 'pipeline-error-groq-403-model-access-denied';
    case PipelineErrorGroq429ExceededQuota = 'pipeline-error-groq-429-exceeded-quota';
    case PipelineErrorGroq500ServerError = 'pipeline-error-groq-500-server-error';
    case PipelineErrorGroq503ServerOverloadedError = 'pipeline-error-groq-503-server-overloaded-error';
    case PipelineErrorGroqLlmFailed = 'pipeline-error-groq-llm-failed';
    case CallInProgressErrorVapifaultGroq400BadRequestValidationFailed = 'call.in-progress.error-vapifault-groq-400-bad-request-validation-failed';
    case CallInProgressErrorVapifaultGroq401Unauthorized = 'call.in-progress.error-vapifault-groq-401-unauthorized';
    case CallInProgressErrorVapifaultGroq403ModelAccessDenied = 'call.in-progress.error-vapifault-groq-403-model-access-denied';
    case CallInProgressErrorVapifaultGroq429ExceededQuota = 'call.in-progress.error-vapifault-groq-429-exceeded-quota';
    case CallInProgressErrorProviderfaultGroq500ServerError = 'call.in-progress.error-providerfault-groq-500-server-error';
    case CallInProgressErrorProviderfaultGroq503ServerOverloadedError = 'call.in-progress.error-providerfault-groq-503-server-overloaded-error';
    case PipelineErrorCerebras400BadRequestValidationFailed = 'pipeline-error-cerebras-400-bad-request-validation-failed';
    case PipelineErrorCerebras401Unauthorized = 'pipeline-error-cerebras-401-unauthorized';
    case PipelineErrorCerebras403ModelAccessDenied = 'pipeline-error-cerebras-403-model-access-denied';
    case PipelineErrorCerebras429ExceededQuota = 'pipeline-error-cerebras-429-exceeded-quota';
    case PipelineErrorCerebras500ServerError = 'pipeline-error-cerebras-500-server-error';
    case PipelineErrorCerebras503ServerOverloadedError = 'pipeline-error-cerebras-503-server-overloaded-error';
    case PipelineErrorCerebrasLlmFailed = 'pipeline-error-cerebras-llm-failed';
    case CallInProgressErrorVapifaultCerebras400BadRequestValidationFailed = 'call.in-progress.error-vapifault-cerebras-400-bad-request-validation-failed';
    case CallInProgressErrorVapifaultCerebras401Unauthorized = 'call.in-progress.error-vapifault-cerebras-401-unauthorized';
    case CallInProgressErrorVapifaultCerebras403ModelAccessDenied = 'call.in-progress.error-vapifault-cerebras-403-model-access-denied';
    case CallInProgressErrorVapifaultCerebras429ExceededQuota = 'call.in-progress.error-vapifault-cerebras-429-exceeded-quota';
    case CallInProgressErrorProviderfaultCerebras500ServerError = 'call.in-progress.error-providerfault-cerebras-500-server-error';
    case CallInProgressErrorProviderfaultCerebras503ServerOverloadedError = 'call.in-progress.error-providerfault-cerebras-503-server-overloaded-error';
    case PipelineErrorAnthropic400BadRequestValidationFailed = 'pipeline-error-anthropic-400-bad-request-validation-failed';
    case PipelineErrorAnthropic401Unauthorized = 'pipeline-error-anthropic-401-unauthorized';
    case PipelineErrorAnthropic403ModelAccessDenied = 'pipeline-error-anthropic-403-model-access-denied';
    case PipelineErrorAnthropic429ExceededQuota = 'pipeline-error-anthropic-429-exceeded-quota';
    case PipelineErrorAnthropic500ServerError = 'pipeline-error-anthropic-500-server-error';
    case PipelineErrorAnthropic503ServerOverloadedError = 'pipeline-error-anthropic-503-server-overloaded-error';
    case PipelineErrorAnthropicLlmFailed = 'pipeline-error-anthropic-llm-failed';
    case CallInProgressErrorProviderfaultAnthropicLlmFailed = 'call.in-progress.error-providerfault-anthropic-llm-failed';
    case CallInProgressErrorVapifaultAnthropic400BadRequestValidationFailed = 'call.in-progress.error-vapifault-anthropic-400-bad-request-validation-failed';
    case CallInProgressErrorVapifaultAnthropic401Unauthorized = 'call.in-progress.error-vapifault-anthropic-401-unauthorized';
    case CallInProgressErrorVapifaultAnthropic403ModelAccessDenied = 'call.in-progress.error-vapifault-anthropic-403-model-access-denied';
    case CallInProgressErrorVapifaultAnthropic429ExceededQuota = 'call.in-progress.error-vapifault-anthropic-429-exceeded-quota';
    case CallInProgressErrorProviderfaultAnthropic500ServerError = 'call.in-progress.error-providerfault-anthropic-500-server-error';
    case CallInProgressErrorProviderfaultAnthropic503ServerOverloadedError = 'call.in-progress.error-providerfault-anthropic-503-server-overloaded-error';
    case PipelineErrorAnthropicBedrock400BadRequestValidationFailed = 'pipeline-error-anthropic-bedrock-400-bad-request-validation-failed';
    case PipelineErrorAnthropicBedrock401Unauthorized = 'pipeline-error-anthropic-bedrock-401-unauthorized';
    case PipelineErrorAnthropicBedrock403ModelAccessDenied = 'pipeline-error-anthropic-bedrock-403-model-access-denied';
    case PipelineErrorAnthropicBedrock429ExceededQuota = 'pipeline-error-anthropic-bedrock-429-exceeded-quota';
    case PipelineErrorAnthropicBedrock500ServerError = 'pipeline-error-anthropic-bedrock-500-server-error';
    case PipelineErrorAnthropicBedrock503ServerOverloadedError = 'pipeline-error-anthropic-bedrock-503-server-overloaded-error';
    case PipelineErrorAnthropicBedrockLlmFailed = 'pipeline-error-anthropic-bedrock-llm-failed';
    case CallInProgressErrorProviderfaultAnthropicBedrockLlmFailed = 'call.in-progress.error-providerfault-anthropic-bedrock-llm-failed';
    case CallInProgressErrorVapifaultAnthropicBedrock400BadRequestValidationFailed = 'call.in-progress.error-vapifault-anthropic-bedrock-400-bad-request-validation-failed';
    case CallInProgressErrorVapifaultAnthropicBedrock401Unauthorized = 'call.in-progress.error-vapifault-anthropic-bedrock-401-unauthorized';
    case CallInProgressErrorVapifaultAnthropicBedrock403ModelAccessDenied = 'call.in-progress.error-vapifault-anthropic-bedrock-403-model-access-denied';
    case CallInProgressErrorVapifaultAnthropicBedrock429ExceededQuota = 'call.in-progress.error-vapifault-anthropic-bedrock-429-exceeded-quota';
    case CallInProgressErrorProviderfaultAnthropicBedrock500ServerError = 'call.in-progress.error-providerfault-anthropic-bedrock-500-server-error';
    case CallInProgressErrorProviderfaultAnthropicBedrock503ServerOverloadedError = 'call.in-progress.error-providerfault-anthropic-bedrock-503-server-overloaded-error';
    case PipelineErrorAnthropicVertex400BadRequestValidationFailed = 'pipeline-error-anthropic-vertex-400-bad-request-validation-failed';
    case PipelineErrorAnthropicVertex401Unauthorized = 'pipeline-error-anthropic-vertex-401-unauthorized';
    case PipelineErrorAnthropicVertex403ModelAccessDenied = 'pipeline-error-anthropic-vertex-403-model-access-denied';
    case PipelineErrorAnthropicVertex429ExceededQuota = 'pipeline-error-anthropic-vertex-429-exceeded-quota';
    case PipelineErrorAnthropicVertex500ServerError = 'pipeline-error-anthropic-vertex-500-server-error';
    case PipelineErrorAnthropicVertex503ServerOverloadedError = 'pipeline-error-anthropic-vertex-503-server-overloaded-error';
    case PipelineErrorAnthropicVertexLlmFailed = 'pipeline-error-anthropic-vertex-llm-failed';
    case CallInProgressErrorProviderfaultAnthropicVertexLlmFailed = 'call.in-progress.error-providerfault-anthropic-vertex-llm-failed';
    case CallInProgressErrorVapifaultAnthropicVertex400BadRequestValidationFailed = 'call.in-progress.error-vapifault-anthropic-vertex-400-bad-request-validation-failed';
    case CallInProgressErrorVapifaultAnthropicVertex401Unauthorized = 'call.in-progress.error-vapifault-anthropic-vertex-401-unauthorized';
    case CallInProgressErrorVapifaultAnthropicVertex403ModelAccessDenied = 'call.in-progress.error-vapifault-anthropic-vertex-403-model-access-denied';
    case CallInProgressErrorVapifaultAnthropicVertex429ExceededQuota = 'call.in-progress.error-vapifault-anthropic-vertex-429-exceeded-quota';
    case CallInProgressErrorProviderfaultAnthropicVertex500ServerError = 'call.in-progress.error-providerfault-anthropic-vertex-500-server-error';
    case CallInProgressErrorProviderfaultAnthropicVertex503ServerOverloadedError = 'call.in-progress.error-providerfault-anthropic-vertex-503-server-overloaded-error';
    case PipelineErrorTogetherAi400BadRequestValidationFailed = 'pipeline-error-together-ai-400-bad-request-validation-failed';
    case PipelineErrorTogetherAi401Unauthorized = 'pipeline-error-together-ai-401-unauthorized';
    case PipelineErrorTogetherAi403ModelAccessDenied = 'pipeline-error-together-ai-403-model-access-denied';
    case PipelineErrorTogetherAi429ExceededQuota = 'pipeline-error-together-ai-429-exceeded-quota';
    case PipelineErrorTogetherAi500ServerError = 'pipeline-error-together-ai-500-server-error';
    case PipelineErrorTogetherAi503ServerOverloadedError = 'pipeline-error-together-ai-503-server-overloaded-error';
    case PipelineErrorTogetherAiLlmFailed = 'pipeline-error-together-ai-llm-failed';
    case CallInProgressErrorProviderfaultTogetherAiLlmFailed = 'call.in-progress.error-providerfault-together-ai-llm-failed';
    case CallInProgressErrorVapifaultTogetherAi400BadRequestValidationFailed = 'call.in-progress.error-vapifault-together-ai-400-bad-request-validation-failed';
    case CallInProgressErrorVapifaultTogetherAi401Unauthorized = 'call.in-progress.error-vapifault-together-ai-401-unauthorized';
    case CallInProgressErrorVapifaultTogetherAi403ModelAccessDenied = 'call.in-progress.error-vapifault-together-ai-403-model-access-denied';
    case CallInProgressErrorVapifaultTogetherAi429ExceededQuota = 'call.in-progress.error-vapifault-together-ai-429-exceeded-quota';
    case CallInProgressErrorProviderfaultTogetherAi500ServerError = 'call.in-progress.error-providerfault-together-ai-500-server-error';
    case CallInProgressErrorProviderfaultTogetherAi503ServerOverloadedError = 'call.in-progress.error-providerfault-together-ai-503-server-overloaded-error';
    case PipelineErrorAnyscale400BadRequestValidationFailed = 'pipeline-error-anyscale-400-bad-request-validation-failed';
    case PipelineErrorAnyscale401Unauthorized = 'pipeline-error-anyscale-401-unauthorized';
    case PipelineErrorAnyscale403ModelAccessDenied = 'pipeline-error-anyscale-403-model-access-denied';
    case PipelineErrorAnyscale429ExceededQuota = 'pipeline-error-anyscale-429-exceeded-quota';
    case PipelineErrorAnyscale500ServerError = 'pipeline-error-anyscale-500-server-error';
    case PipelineErrorAnyscale503ServerOverloadedError = 'pipeline-error-anyscale-503-server-overloaded-error';
    case PipelineErrorAnyscaleLlmFailed = 'pipeline-error-anyscale-llm-failed';
    case CallInProgressErrorProviderfaultAnyscaleLlmFailed = 'call.in-progress.error-providerfault-anyscale-llm-failed';
    case CallInProgressErrorVapifaultAnyscale400BadRequestValidationFailed = 'call.in-progress.error-vapifault-anyscale-400-bad-request-validation-failed';
    case CallInProgressErrorVapifaultAnyscale401Unauthorized = 'call.in-progress.error-vapifault-anyscale-401-unauthorized';
    case CallInProgressErrorVapifaultAnyscale403ModelAccessDenied = 'call.in-progress.error-vapifault-anyscale-403-model-access-denied';
    case CallInProgressErrorVapifaultAnyscale429ExceededQuota = 'call.in-progress.error-vapifault-anyscale-429-exceeded-quota';
    case CallInProgressErrorProviderfaultAnyscale500ServerError = 'call.in-progress.error-providerfault-anyscale-500-server-error';
    case CallInProgressErrorProviderfaultAnyscale503ServerOverloadedError = 'call.in-progress.error-providerfault-anyscale-503-server-overloaded-error';
    case PipelineErrorOpenrouter400BadRequestValidationFailed = 'pipeline-error-openrouter-400-bad-request-validation-failed';
    case PipelineErrorOpenrouter401Unauthorized = 'pipeline-error-openrouter-401-unauthorized';
    case PipelineErrorOpenrouter403ModelAccessDenied = 'pipeline-error-openrouter-403-model-access-denied';
    case PipelineErrorOpenrouter429ExceededQuota = 'pipeline-error-openrouter-429-exceeded-quota';
    case PipelineErrorOpenrouter500ServerError = 'pipeline-error-openrouter-500-server-error';
    case PipelineErrorOpenrouter503ServerOverloadedError = 'pipeline-error-openrouter-503-server-overloaded-error';
    case PipelineErrorOpenrouterLlmFailed = 'pipeline-error-openrouter-llm-failed';
    case CallInProgressErrorProviderfaultOpenrouterLlmFailed = 'call.in-progress.error-providerfault-openrouter-llm-failed';
    case CallInProgressErrorVapifaultOpenrouter400BadRequestValidationFailed = 'call.in-progress.error-vapifault-openrouter-400-bad-request-validation-failed';
    case CallInProgressErrorVapifaultOpenrouter401Unauthorized = 'call.in-progress.error-vapifault-openrouter-401-unauthorized';
    case CallInProgressErrorVapifaultOpenrouter403ModelAccessDenied = 'call.in-progress.error-vapifault-openrouter-403-model-access-denied';
    case CallInProgressErrorVapifaultOpenrouter429ExceededQuota = 'call.in-progress.error-vapifault-openrouter-429-exceeded-quota';
    case CallInProgressErrorProviderfaultOpenrouter500ServerError = 'call.in-progress.error-providerfault-openrouter-500-server-error';
    case CallInProgressErrorProviderfaultOpenrouter503ServerOverloadedError = 'call.in-progress.error-providerfault-openrouter-503-server-overloaded-error';
    case PipelineErrorPerplexityAi400BadRequestValidationFailed = 'pipeline-error-perplexity-ai-400-bad-request-validation-failed';
    case PipelineErrorPerplexityAi401Unauthorized = 'pipeline-error-perplexity-ai-401-unauthorized';
    case PipelineErrorPerplexityAi403ModelAccessDenied = 'pipeline-error-perplexity-ai-403-model-access-denied';
    case PipelineErrorPerplexityAi429ExceededQuota = 'pipeline-error-perplexity-ai-429-exceeded-quota';
    case PipelineErrorPerplexityAi500ServerError = 'pipeline-error-perplexity-ai-500-server-error';
    case PipelineErrorPerplexityAi503ServerOverloadedError = 'pipeline-error-perplexity-ai-503-server-overloaded-error';
    case PipelineErrorPerplexityAiLlmFailed = 'pipeline-error-perplexity-ai-llm-failed';
    case CallInProgressErrorProviderfaultPerplexityAiLlmFailed = 'call.in-progress.error-providerfault-perplexity-ai-llm-failed';
    case CallInProgressErrorVapifaultPerplexityAi400BadRequestValidationFailed = 'call.in-progress.error-vapifault-perplexity-ai-400-bad-request-validation-failed';
    case CallInProgressErrorVapifaultPerplexityAi401Unauthorized = 'call.in-progress.error-vapifault-perplexity-ai-401-unauthorized';
    case CallInProgressErrorVapifaultPerplexityAi403ModelAccessDenied = 'call.in-progress.error-vapifault-perplexity-ai-403-model-access-denied';
    case CallInProgressErrorVapifaultPerplexityAi429ExceededQuota = 'call.in-progress.error-vapifault-perplexity-ai-429-exceeded-quota';
    case CallInProgressErrorProviderfaultPerplexityAi500ServerError = 'call.in-progress.error-providerfault-perplexity-ai-500-server-error';
    case CallInProgressErrorProviderfaultPerplexityAi503ServerOverloadedError = 'call.in-progress.error-providerfault-perplexity-ai-503-server-overloaded-error';
    case PipelineErrorDeepinfra400BadRequestValidationFailed = 'pipeline-error-deepinfra-400-bad-request-validation-failed';
    case PipelineErrorDeepinfra401Unauthorized = 'pipeline-error-deepinfra-401-unauthorized';
    case PipelineErrorDeepinfra403ModelAccessDenied = 'pipeline-error-deepinfra-403-model-access-denied';
    case PipelineErrorDeepinfra429ExceededQuota = 'pipeline-error-deepinfra-429-exceeded-quota';
    case PipelineErrorDeepinfra500ServerError = 'pipeline-error-deepinfra-500-server-error';
    case PipelineErrorDeepinfra503ServerOverloadedError = 'pipeline-error-deepinfra-503-server-overloaded-error';
    case PipelineErrorDeepinfraLlmFailed = 'pipeline-error-deepinfra-llm-failed';
    case CallInProgressErrorProviderfaultDeepinfraLlmFailed = 'call.in-progress.error-providerfault-deepinfra-llm-failed';
    case CallInProgressErrorVapifaultDeepinfra400BadRequestValidationFailed = 'call.in-progress.error-vapifault-deepinfra-400-bad-request-validation-failed';
    case CallInProgressErrorVapifaultDeepinfra401Unauthorized = 'call.in-progress.error-vapifault-deepinfra-401-unauthorized';
    case CallInProgressErrorVapifaultDeepinfra403ModelAccessDenied = 'call.in-progress.error-vapifault-deepinfra-403-model-access-denied';
    case CallInProgressErrorVapifaultDeepinfra429ExceededQuota = 'call.in-progress.error-vapifault-deepinfra-429-exceeded-quota';
    case CallInProgressErrorProviderfaultDeepinfra500ServerError = 'call.in-progress.error-providerfault-deepinfra-500-server-error';
    case CallInProgressErrorProviderfaultDeepinfra503ServerOverloadedError = 'call.in-progress.error-providerfault-deepinfra-503-server-overloaded-error';
    case PipelineErrorRunpod400BadRequestValidationFailed = 'pipeline-error-runpod-400-bad-request-validation-failed';
    case PipelineErrorRunpod401Unauthorized = 'pipeline-error-runpod-401-unauthorized';
    case PipelineErrorRunpod403ModelAccessDenied = 'pipeline-error-runpod-403-model-access-denied';
    case PipelineErrorRunpod429ExceededQuota = 'pipeline-error-runpod-429-exceeded-quota';
    case PipelineErrorRunpod500ServerError = 'pipeline-error-runpod-500-server-error';
    case PipelineErrorRunpod503ServerOverloadedError = 'pipeline-error-runpod-503-server-overloaded-error';
    case PipelineErrorRunpodLlmFailed = 'pipeline-error-runpod-llm-failed';
    case CallInProgressErrorProviderfaultRunpodLlmFailed = 'call.in-progress.error-providerfault-runpod-llm-failed';
    case CallInProgressErrorVapifaultRunpod400BadRequestValidationFailed = 'call.in-progress.error-vapifault-runpod-400-bad-request-validation-failed';
    case CallInProgressErrorVapifaultRunpod401Unauthorized = 'call.in-progress.error-vapifault-runpod-401-unauthorized';
    case CallInProgressErrorVapifaultRunpod403ModelAccessDenied = 'call.in-progress.error-vapifault-runpod-403-model-access-denied';
    case CallInProgressErrorVapifaultRunpod429ExceededQuota = 'call.in-progress.error-vapifault-runpod-429-exceeded-quota';
    case CallInProgressErrorProviderfaultRunpod500ServerError = 'call.in-progress.error-providerfault-runpod-500-server-error';
    case CallInProgressErrorProviderfaultRunpod503ServerOverloadedError = 'call.in-progress.error-providerfault-runpod-503-server-overloaded-error';
    case PipelineErrorCustomLlm400BadRequestValidationFailed = 'pipeline-error-custom-llm-400-bad-request-validation-failed';
    case PipelineErrorCustomLlm401Unauthorized = 'pipeline-error-custom-llm-401-unauthorized';
    case PipelineErrorCustomLlm403ModelAccessDenied = 'pipeline-error-custom-llm-403-model-access-denied';
    case PipelineErrorCustomLlm429ExceededQuota = 'pipeline-error-custom-llm-429-exceeded-quota';
    case PipelineErrorCustomLlm500ServerError = 'pipeline-error-custom-llm-500-server-error';
    case PipelineErrorCustomLlm503ServerOverloadedError = 'pipeline-error-custom-llm-503-server-overloaded-error';
    case PipelineErrorCustomLlmLlmFailed = 'pipeline-error-custom-llm-llm-failed';
    case CallInProgressErrorProviderfaultCustomLlmLlmFailed = 'call.in-progress.error-providerfault-custom-llm-llm-failed';
    case CallInProgressErrorVapifaultCustomLlm400BadRequestValidationFailed = 'call.in-progress.error-vapifault-custom-llm-400-bad-request-validation-failed';
    case CallInProgressErrorVapifaultCustomLlm401Unauthorized = 'call.in-progress.error-vapifault-custom-llm-401-unauthorized';
    case CallInProgressErrorVapifaultCustomLlm403ModelAccessDenied = 'call.in-progress.error-vapifault-custom-llm-403-model-access-denied';
    case CallInProgressErrorVapifaultCustomLlm429ExceededQuota = 'call.in-progress.error-vapifault-custom-llm-429-exceeded-quota';
    case CallInProgressErrorProviderfaultCustomLlm500ServerError = 'call.in-progress.error-providerfault-custom-llm-500-server-error';
    case CallInProgressErrorProviderfaultCustomLlm503ServerOverloadedError = 'call.in-progress.error-providerfault-custom-llm-503-server-overloaded-error';
    case PipelineErrorCustomVoiceFailed = 'pipeline-error-custom-voice-failed';
    case PipelineErrorCartesiaSocketHangUp = 'pipeline-error-cartesia-socket-hang-up';
    case PipelineErrorCartesiaRequestedPayment = 'pipeline-error-cartesia-requested-payment';
    case PipelineErrorCartesia500ServerError = 'pipeline-error-cartesia-500-server-error';
    case PipelineErrorCartesia502ServerError = 'pipeline-error-cartesia-502-server-error';
    case PipelineErrorCartesia503ServerError = 'pipeline-error-cartesia-503-server-error';
    case PipelineErrorCartesia522ServerError = 'pipeline-error-cartesia-522-server-error';
    case CallInProgressErrorVapifaultCartesiaSocketHangUp = 'call.in-progress.error-vapifault-cartesia-socket-hang-up';
    case CallInProgressErrorVapifaultCartesiaRequestedPayment = 'call.in-progress.error-vapifault-cartesia-requested-payment';
    case CallInProgressErrorProviderfaultCartesia500ServerError = 'call.in-progress.error-providerfault-cartesia-500-server-error';
    case CallInProgressErrorProviderfaultCartesia503ServerError = 'call.in-progress.error-providerfault-cartesia-503-server-error';
    case CallInProgressErrorProviderfaultCartesia522ServerError = 'call.in-progress.error-providerfault-cartesia-522-server-error';
    case PipelineErrorElevenLabsVoiceNotFound = 'pipeline-error-eleven-labs-voice-not-found';
    case PipelineErrorElevenLabsQuotaExceeded = 'pipeline-error-eleven-labs-quota-exceeded';
    case PipelineErrorElevenLabsUnauthorizedAccess = 'pipeline-error-eleven-labs-unauthorized-access';
    case PipelineErrorElevenLabsUnauthorizedToAccessModel = 'pipeline-error-eleven-labs-unauthorized-to-access-model';
    case PipelineErrorElevenLabsProfessionalVoicesOnlyForCreatorPlus = 'pipeline-error-eleven-labs-professional-voices-only-for-creator-plus';
    case PipelineErrorElevenLabsBlockedFreePlanAndRequestedUpgrade = 'pipeline-error-eleven-labs-blocked-free-plan-and-requested-upgrade';
    case PipelineErrorElevenLabsBlockedConcurrentRequestsAndRequestedUpgrade = 'pipeline-error-eleven-labs-blocked-concurrent-requests-and-requested-upgrade';
    case PipelineErrorElevenLabsBlockedUsingInstantVoiceCloneAndRequestedUpgrade = 'pipeline-error-eleven-labs-blocked-using-instant-voice-clone-and-requested-upgrade';
    case PipelineErrorElevenLabsSystemBusyAndRequestedUpgrade = 'pipeline-error-eleven-labs-system-busy-and-requested-upgrade';
    case PipelineErrorElevenLabsVoiceNotFineTuned = 'pipeline-error-eleven-labs-voice-not-fine-tuned';
    case PipelineErrorElevenLabsInvalidApiKey = 'pipeline-error-eleven-labs-invalid-api-key';
    case PipelineErrorElevenLabsInvalidVoiceSamples = 'pipeline-error-eleven-labs-invalid-voice-samples';
    case PipelineErrorElevenLabsVoiceDisabledByOwner = 'pipeline-error-eleven-labs-voice-disabled-by-owner';
    case PipelineErrorElevenLabsVapiVoiceDisabledByOwner = 'pipeline-error-eleven-labs-vapi-voice-disabled-by-owner';
    case PipelineErrorElevenLabsBlockedAccountInProbation = 'pipeline-error-eleven-labs-blocked-account-in-probation';
    case PipelineErrorElevenLabsBlockedContentAgainstTheirPolicy = 'pipeline-error-eleven-labs-blocked-content-against-their-policy';
    case PipelineErrorElevenLabsMissingSamplesForVoiceClone = 'pipeline-error-eleven-labs-missing-samples-for-voice-clone';
    case PipelineErrorElevenLabsVoiceNotFineTunedAndCannotBeUsed = 'pipeline-error-eleven-labs-voice-not-fine-tuned-and-cannot-be-used';
    case PipelineErrorElevenLabsVoiceNotAllowedForFreeUsers = 'pipeline-error-eleven-labs-voice-not-allowed-for-free-users';
    case PipelineErrorElevenLabsMaxCharacterLimitExceeded = 'pipeline-error-eleven-labs-max-character-limit-exceeded';
    case PipelineErrorElevenLabsBlockedVoicePotentiallyAgainstTermsOfServiceAndAwaitingVerification = 'pipeline-error-eleven-labs-blocked-voice-potentially-against-terms-of-service-and-awaiting-verification';
    case PipelineErrorElevenLabs500ServerError = 'pipeline-error-eleven-labs-500-server-error';
    case PipelineErrorElevenLabs503ServerError = 'pipeline-error-eleven-labs-503-server-error';
    case CallInProgressErrorVapifaultElevenLabsVoiceNotFound = 'call.in-progress.error-vapifault-eleven-labs-voice-not-found';
    case CallInProgressErrorVapifaultElevenLabsQuotaExceeded = 'call.in-progress.error-vapifault-eleven-labs-quota-exceeded';
    case CallInProgressErrorVapifaultElevenLabsUnauthorizedAccess = 'call.in-progress.error-vapifault-eleven-labs-unauthorized-access';
    case CallInProgressErrorVapifaultElevenLabsUnauthorizedToAccessModel = 'call.in-progress.error-vapifault-eleven-labs-unauthorized-to-access-model';
    case CallInProgressErrorVapifaultElevenLabsProfessionalVoicesOnlyForCreatorPlus = 'call.in-progress.error-vapifault-eleven-labs-professional-voices-only-for-creator-plus';
    case CallInProgressErrorVapifaultElevenLabsBlockedFreePlanAndRequestedUpgrade = 'call.in-progress.error-vapifault-eleven-labs-blocked-free-plan-and-requested-upgrade';
    case CallInProgressErrorVapifaultElevenLabsBlockedConcurrentRequestsAndRequestedUpgrade = 'call.in-progress.error-vapifault-eleven-labs-blocked-concurrent-requests-and-requested-upgrade';
    case CallInProgressErrorVapifaultElevenLabsBlockedUsingInstantVoiceCloneAndRequestedUpgrade = 'call.in-progress.error-vapifault-eleven-labs-blocked-using-instant-voice-clone-and-requested-upgrade';
    case CallInProgressErrorVapifaultElevenLabsSystemBusyAndRequestedUpgrade = 'call.in-progress.error-vapifault-eleven-labs-system-busy-and-requested-upgrade';
    case CallInProgressErrorVapifaultElevenLabsVoiceNotFineTuned = 'call.in-progress.error-vapifault-eleven-labs-voice-not-fine-tuned';
    case CallInProgressErrorVapifaultElevenLabsInvalidApiKey = 'call.in-progress.error-vapifault-eleven-labs-invalid-api-key';
    case CallInProgressErrorVapifaultElevenLabsInvalidVoiceSamples = 'call.in-progress.error-vapifault-eleven-labs-invalid-voice-samples';
    case CallInProgressErrorVapifaultElevenLabsVoiceDisabledByOwner = 'call.in-progress.error-vapifault-eleven-labs-voice-disabled-by-owner';
    case CallInProgressErrorVapifaultElevenLabsBlockedAccountInProbation = 'call.in-progress.error-vapifault-eleven-labs-blocked-account-in-probation';
    case CallInProgressErrorVapifaultElevenLabsBlockedContentAgainstTheirPolicy = 'call.in-progress.error-vapifault-eleven-labs-blocked-content-against-their-policy';
    case CallInProgressErrorVapifaultElevenLabsMissingSamplesForVoiceClone = 'call.in-progress.error-vapifault-eleven-labs-missing-samples-for-voice-clone';
    case CallInProgressErrorVapifaultElevenLabsVoiceNotFineTunedAndCannotBeUsed = 'call.in-progress.error-vapifault-eleven-labs-voice-not-fine-tuned-and-cannot-be-used';
    case CallInProgressErrorVapifaultElevenLabsVoiceNotAllowedForFreeUsers = 'call.in-progress.error-vapifault-eleven-labs-voice-not-allowed-for-free-users';
    case CallInProgressErrorVapifaultElevenLabsMaxCharacterLimitExceeded = 'call.in-progress.error-vapifault-eleven-labs-max-character-limit-exceeded';
    case CallInProgressErrorVapifaultElevenLabsBlockedVoicePotentiallyAgainstTermsOfServiceAndAwaitingVerification = 'call.in-progress.error-vapifault-eleven-labs-blocked-voice-potentially-against-terms-of-service-and-awaiting-verification';
    case CallInProgressErrorProviderfaultElevenLabs500ServerError = 'call.in-progress.error-providerfault-eleven-labs-500-server-error';
    case CallInProgressErrorProviderfaultElevenLabs503ServerError = 'call.in-progress.error-providerfault-eleven-labs-503-server-error';
    case PipelineErrorPlayhtRequestTimedOut = 'pipeline-error-playht-request-timed-out';
    case PipelineErrorPlayhtInvalidVoice = 'pipeline-error-playht-invalid-voice';
    case PipelineErrorPlayhtUnexpectedError = 'pipeline-error-playht-unexpected-error';
    case PipelineErrorPlayhtOutOfCredits = 'pipeline-error-playht-out-of-credits';
    case PipelineErrorPlayhtInvalidEmotion = 'pipeline-error-playht-invalid-emotion';
    case PipelineErrorPlayhtVoiceMustBeAValidVoiceManifestUri = 'pipeline-error-playht-voice-must-be-a-valid-voice-manifest-uri';
    case PipelineErrorPlayht401Unauthorized = 'pipeline-error-playht-401-unauthorized';
    case PipelineErrorPlayht403ForbiddenOutOfCharacters = 'pipeline-error-playht-403-forbidden-out-of-characters';
    case PipelineErrorPlayht403ForbiddenApiAccessNotAvailable = 'pipeline-error-playht-403-forbidden-api-access-not-available';
    case PipelineErrorPlayht429ExceededQuota = 'pipeline-error-playht-429-exceeded-quota';
    case PipelineErrorPlayht502GatewayError = 'pipeline-error-playht-502-gateway-error';
    case PipelineErrorPlayht504GatewayError = 'pipeline-error-playht-504-gateway-error';
    case CallInProgressErrorVapifaultPlayhtRequestTimedOut = 'call.in-progress.error-vapifault-playht-request-timed-out';
    case CallInProgressErrorVapifaultPlayhtInvalidVoice = 'call.in-progress.error-vapifault-playht-invalid-voice';
    case CallInProgressErrorVapifaultPlayhtUnexpectedError = 'call.in-progress.error-vapifault-playht-unexpected-error';
    case CallInProgressErrorVapifaultPlayhtOutOfCredits = 'call.in-progress.error-vapifault-playht-out-of-credits';
    case CallInProgressErrorVapifaultPlayhtInvalidEmotion = 'call.in-progress.error-vapifault-playht-invalid-emotion';
    case CallInProgressErrorVapifaultPlayhtVoiceMustBeAValidVoiceManifestUri = 'call.in-progress.error-vapifault-playht-voice-must-be-a-valid-voice-manifest-uri';
    case CallInProgressErrorVapifaultPlayht401Unauthorized = 'call.in-progress.error-vapifault-playht-401-unauthorized';
    case CallInProgressErrorVapifaultPlayht403ForbiddenOutOfCharacters = 'call.in-progress.error-vapifault-playht-403-forbidden-out-of-characters';
    case CallInProgressErrorVapifaultPlayht403ForbiddenApiAccessNotAvailable = 'call.in-progress.error-vapifault-playht-403-forbidden-api-access-not-available';
    case CallInProgressErrorVapifaultPlayht429ExceededQuota = 'call.in-progress.error-vapifault-playht-429-exceeded-quota';
    case CallInProgressErrorProviderfaultPlayht502GatewayError = 'call.in-progress.error-providerfault-playht-502-gateway-error';
    case CallInProgressErrorProviderfaultPlayht504GatewayError = 'call.in-progress.error-providerfault-playht-504-gateway-error';
    case PipelineErrorCustomTranscriberFailed = 'pipeline-error-custom-transcriber-failed';
    case CallInProgressErrorVapifaultCustomTranscriberFailed = 'call.in-progress.error-vapifault-custom-transcriber-failed';
    case PipelineErrorElevenLabsTranscriberFailed = 'pipeline-error-eleven-labs-transcriber-failed';
    case CallInProgressErrorVapifaultElevenLabsTranscriberFailed = 'call.in-progress.error-vapifault-eleven-labs-transcriber-failed';
    case PipelineErrorDeepgramReturning400NoSuchModelLanguageTierCombination = 'pipeline-error-deepgram-returning-400-no-such-model-language-tier-combination';
    case PipelineErrorDeepgramReturning401InvalidCredentials = 'pipeline-error-deepgram-returning-401-invalid-credentials';
    case PipelineErrorDeepgramReturning403ModelAccessDenied = 'pipeline-error-deepgram-returning-403-model-access-denied';
    case PipelineErrorDeepgramReturning404NotFound = 'pipeline-error-deepgram-returning-404-not-found';
    case PipelineErrorDeepgramReturning500InvalidJson = 'pipeline-error-deepgram-returning-500-invalid-json';
    case PipelineErrorDeepgramReturning502NetworkError = 'pipeline-error-deepgram-returning-502-network-error';
    case PipelineErrorDeepgramReturning502BadGatewayEhostunreach = 'pipeline-error-deepgram-returning-502-bad-gateway-ehostunreach';
    case PipelineErrorDeepgramReturningEconnreset = 'pipeline-error-deepgram-returning-econnreset';
    case CallInProgressErrorVapifaultDeepgramReturning400NoSuchModelLanguageTierCombination = 'call.in-progress.error-vapifault-deepgram-returning-400-no-such-model-language-tier-combination';
    case CallInProgressErrorVapifaultDeepgramReturning401InvalidCredentials = 'call.in-progress.error-vapifault-deepgram-returning-401-invalid-credentials';
    case CallInProgressErrorVapifaultDeepgramReturning404NotFound = 'call.in-progress.error-vapifault-deepgram-returning-404-not-found';
    case CallInProgressErrorVapifaultDeepgramReturning403ModelAccessDenied = 'call.in-progress.error-vapifault-deepgram-returning-403-model-access-denied';
    case CallInProgressErrorProviderfaultDeepgramReturning500InvalidJson = 'call.in-progress.error-providerfault-deepgram-returning-500-invalid-json';
    case CallInProgressErrorProviderfaultDeepgramReturning502NetworkError = 'call.in-progress.error-providerfault-deepgram-returning-502-network-error';
    case CallInProgressErrorProviderfaultDeepgramReturning502BadGatewayEhostunreach = 'call.in-progress.error-providerfault-deepgram-returning-502-bad-gateway-ehostunreach';
    case PipelineErrorGoogleTranscriberFailed = 'pipeline-error-google-transcriber-failed';
    case CallInProgressErrorVapifaultGoogleTranscriberFailed = 'call.in-progress.error-vapifault-google-transcriber-failed';
    case PipelineErrorOpenaiTranscriberFailed = 'pipeline-error-openai-transcriber-failed';
    case CallInProgressErrorVapifaultOpenaiTranscriberFailed = 'call.in-progress.error-vapifault-openai-transcriber-failed';
    case CallInProgressErrorWarmTransferMaxDuration = 'call.in-progress.error-warm-transfer-max-duration';
    case CallInProgressErrorWarmTransferAssistantCancelled = 'call.in-progress.error-warm-transfer-assistant-cancelled';
    case CallInProgressErrorWarmTransferSilenceTimeout = 'call.in-progress.error-warm-transfer-silence-timeout';
    case CallInProgressErrorWarmTransferMicrophoneTimeout = 'call.in-progress.error-warm-transfer-microphone-timeout';
    case CallInProgressErrorWarmTransferHangTimeout = 'call.in-progress.error-warm-transfer-hang-timeout';
    case CallInProgressErrorWarmTransferIdleTimeout = 'call.in-progress.error-warm-transfer-idle-timeout';
    case AssistantEndedCall = 'assistant-ended-call';
    case AssistantSaidEndCallPhrase = 'assistant-said-end-call-phrase';
    case AssistantEndedCallWithHangupTask = 'assistant-ended-call-with-hangup-task';
    case AssistantEndedCallAfterMessageSpoken = 'assistant-ended-call-after-message-spoken';
    case AssistantForwardedCall = 'assistant-forwarded-call';
    case AssistantJoinTimedOut = 'assistant-join-timed-out';
    case CallInProgressErrorAssistantDidNotReceiveCustomerAudio = 'call.in-progress.error-assistant-did-not-receive-customer-audio';
    case CallInProgressErrorTransferFailed = 'call.in-progress.error-transfer-failed';
    case CustomerBusy = 'customer-busy';
    case CustomerEndedCall = 'customer-ended-call';
    case CustomerEndedCallBeforeWarmTransfer = 'customer-ended-call-before-warm-transfer';
    case CustomerEndedCallAfterWarmTransferAttempt = 'customer-ended-call-after-warm-transfer-attempt';
    case CustomerDidNotAnswer = 'customer-did-not-answer';
    case CustomerDidNotGiveMicrophonePermission = 'customer-did-not-give-microphone-permission';
    case ExceededMaxDuration = 'exceeded-max-duration';
    case ManuallyCanceled = 'manually-canceled';
    case PhoneCallProviderClosedWebsocket = 'phone-call-provider-closed-websocket';
    case CallForwardingOperatorBusy = 'call.forwarding.operator-busy';
    case SilenceTimedOut = 'silence-timed-out';
    case CallInProgressErrorSipInboundCallFailedToConnect = 'call.in-progress.error-sip-inbound-call-failed-to-connect';
    case CallInProgressErrorProviderfaultOutboundSip403Forbidden = 'call.in-progress.error-providerfault-outbound-sip-403-forbidden';
    case CallInProgressErrorProviderfaultOutboundSip407ProxyAuthenticationRequired = 'call.in-progress.error-providerfault-outbound-sip-407-proxy-authentication-required';
    case CallInProgressErrorProviderfaultOutboundSip503ServiceUnavailable = 'call.in-progress.error-providerfault-outbound-sip-503-service-unavailable';
    case CallInProgressErrorProviderfaultOutboundSip480TemporarilyUnavailable = 'call.in-progress.error-providerfault-outbound-sip-480-temporarily-unavailable';
    case CallInProgressErrorSipOutboundCallFailedToConnect = 'call.in-progress.error-sip-outbound-call-failed-to-connect';
    case CallRingingHookExecutedSay = 'call.ringing.hook-executed-say';
    case CallRingingHookExecutedTransfer = 'call.ringing.hook-executed-transfer';
    case CallEndingHookExecutedSay = 'call.ending.hook-executed-say';
    case CallEndingHookExecutedTransfer = 'call.ending.hook-executed-transfer';
    case CallRingingSipInboundCallerHungupBeforeCallConnect = 'call.ringing.sip-inbound-caller-hungup-before-call-connect';
    case CallRingingErrorSipInboundCallFailedToConnect = 'call.ringing.error-sip-inbound-call-failed-to-connect';
    case TwilioFailedToConnectCall = 'twilio-failed-to-connect-call';
    case TwilioReportedCustomerMisdialed = 'twilio-reported-customer-misdialed';
    case VonageRejected = 'vonage-rejected';
    case Voicemail = 'voicemail';
    case CallDeleted = 'call-deleted';
}
