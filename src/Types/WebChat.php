<?php declare(strict_types=1);

namespace Vapi\Types;

use Vapi\Core\Json\JsonProperty;
use Vapi\Core\Json\JsonSerializableType;
use Vapi\Core\Types\ArrayType;
use Vapi\Core\Types\Union;

final class WebChat extends JsonSerializableType
{
    /**
     * @var string $id This is the unique identifier for the chat.
     */
    #[JsonProperty('id')]
    public string $id;

    /**
     * @var ?string $sessionId This is the ID of the session for the chat. Send it in the next chat request to continue the conversation.
     */
    #[JsonProperty('sessionId')]
    public ?string $sessionId;

    /**
     * @var array<(
     *    SystemMessage
     *   |UserMessage
     *   |AssistantMessage
     *   |ToolMessage
     *   |DeveloperMessage
     * )> $output This is the output messages generated by the system in response to the input.
     */
    #[JsonProperty('output'), ArrayType([new Union(SystemMessage::class, UserMessage::class, AssistantMessage::class, ToolMessage::class, DeveloperMessage::class)])]
    public array $output;

    /**
     * @param array{
     *   id: string,
     *   output: array<(
     *    SystemMessage
     *   |UserMessage
     *   |AssistantMessage
     *   |ToolMessage
     *   |DeveloperMessage
     * )>,
     *   sessionId?: ?string,
     * } $values
     */
    public function __construct(
        array $values,
    ) {
        $this->id = $values['id'];
        $this->sessionId = $values['sessionId'] ?? null;
        $this->output = $values['output'];
    }

    /**
     * @return string
     */
    public function __toString(): string
    {
        return $this->toJson();
    }
}
